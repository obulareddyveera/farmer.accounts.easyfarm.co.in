{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport actions from \"./../../../store/actions\";\n/**\r\n * Source URL -- https://bootsnipp.com/snippets/prnvG\r\n */\n\nexport default function AppNavigationMenu() {\n  var metadataActions = actions.metadataActions;\n  var dispatch = useDispatch();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  React.useEffect(function () {\n    dispatch(metadataActions.getSideMenuMetaData());\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      metaData: state.MetaData\n    };\n  }),\n      metaData = _useSelector.metaData;\n\n  var sideMenuMetaInfo = metaData.sideMenuMetaInfo;\n\n  var onLiClick = function onLiClick(item) {\n    if (item.subMenu) {\n      dispatch(metadataActions.onToggleSubmenu(item));\n    } else {\n      dispatch(metadataActions.onLiItemSelect(item));\n    }\n  };\n\n  var getLinkTag = function getLinkTag(item) {\n    var randomUniqueId = \"submenuId\".concat(new Date().getTime(), \"_\").concat(item.id);\n    return __jsx(\"li\", {\n      className: item.className,\n      key: item.id,\n      onClick: function onClick() {\n        return onLiClick(item);\n      }\n    }, __jsx(React.Fragment, null, item.type === \"link\" && __jsx(React.Fragment, null, __jsx(\"a\", {\n      href: \"#\".concat(item.url),\n      className: \"d-flex justify-content-start\"\n    }, __jsx(\"div\", null, item.iconComponent && /*#__PURE__*/React.createElement(item.iconComponent, {\n      size: \"20\",\n      color: \"#fff\"\n    })), __jsx(\"div\", {\n      className: \"ml-3\"\n    }, t(item.translation)), __jsx(\"div\", null, item.subMenu && __jsx(\"button\", {\n      className: \"btn text-white submenu-indicator\"\n    }, item.showSubmenu ? \"-\" : \"+\")))), item.type === \"info\" && __jsx(\"a\", {\n      href: \"#\",\n      onClick: function onClick(event) {\n        return event.preventDefault();\n      }\n    }, t(item.translation)), item.subMenu && __jsx(\"ul\", {\n      className: \"submenu \".concat(item.showSubmenu ? \"d-block\" : \"d-none\"),\n      key: randomUniqueId,\n      id: randomUniqueId\n    }, item.subMenu.map(function (entity) {\n      return getLinkTag(entity);\n    }))));\n  };\n\n  return __jsx(React.Fragment, null, sideMenuMetaInfo && sideMenuMetaInfo.length > 0 && __jsx(\"div\", {\n    id: \"jquery-accordion-menu\",\n    className: \"jquery-accordion-menu\"\n  }, __jsx(\"ul\", null, sideMenuMetaInfo.map(function (item) {\n    return getLinkTag(item);\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}
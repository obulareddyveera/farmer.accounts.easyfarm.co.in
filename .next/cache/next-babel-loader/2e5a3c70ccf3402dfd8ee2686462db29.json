{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\obulareddy.reddy\\\\workspace\\\\projects\\\\easyfarm\\\\farmer.accounts.easyfarm.co.in\\\\pages\\\\app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { StaticRouter, BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport HNav from \"./client/components/hnav\";\nimport SideNav from \"./client/components/sidenav\";\nimport Dashboard from \"./client/container/dashboard\";\nimport Profiler from \"./client/container/profiler\";\nimport { getActiveSessionUser } from \"./../store/actions\";\nvar isServer = false;\n\nfunction FarmerAccounts(props) {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  React.useEffect(function () {\n    dispatch(getActiveSessionUser());\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      session: state.Users && state.Users.session || {}\n    };\n  }),\n      session = _useSelector.session;\n\n  var picture = session.picture;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(HNav, {\n    pic: picture || \"/empty_profile.jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    style: {\n      marginTop: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-wrap w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"mt-4 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, isServer && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"I am a StaticRouter \"), __jsx(StaticRouter, {\n    location: router.asPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, __jsx(Route, {\n    path: \"/app/auth/profile\",\n    exact: true,\n    component: Profiler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), __jsx(Route, {\n    path: \"/app\",\n    exact: true,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })))), !isServer && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"I am a BrowserRouter \"), __jsx(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, __jsx(Route, {\n    path: \"/app/auth/profile\",\n    exact: true,\n    component: Profiler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), __jsx(Route, {\n    path: \"/app\",\n    exact: true,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))))))));\n}\n\n_s(FarmerAccounts, \"RWBe9EXVOro7xUC+qrSkNDtRAm4=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = FarmerAccounts;\nexport default FarmerAccounts;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerAccounts\");","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/pages/app.js"],"names":["React","StaticRouter","BrowserRouter","Switch","Route","useSelector","useDispatch","useRouter","HNav","SideNav","Dashboard","Profiler","getActiveSessionUser","isServer","FarmerAccounts","props","dispatch","router","useEffect","state","session","Users","picture","marginTop","asPath"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StaticRouter, BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport HNav from \"./client/components/hnav\";\r\nimport SideNav from \"./client/components/sidenav\";\r\nimport Dashboard from \"./client/container/dashboard\";\r\nimport Profiler from \"./client/container/profiler\";\r\nimport { getActiveSessionUser } from \"./../store/actions\";\r\n\r\nconst isServer = typeof window === \"undefined\";\r\nfunction FarmerAccounts(props) {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  React.useEffect(() => {\r\n    dispatch(getActiveSessionUser());\r\n  }, []);\r\n\r\n  const { session } = useSelector((state) => {\r\n    return {\r\n      session: (state.Users && state.Users.session) || {},\r\n    };\r\n  });\r\n  const { picture } = session;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HNav pic={picture || \"/empty_profile.jpeg\"} />\r\n      <main style={{ marginTop: \"2rem\" }}>\r\n        <div className=\"d-flex flex-wrap w-100\">\r\n          <SideNav />\r\n          <div className=\"mt-4 p-4\">\r\n            {isServer && (\r\n              <React.Fragment>\r\n                <h3>I am a StaticRouter </h3>\r\n                <StaticRouter location={router.asPath}>\r\n                  <Switch>\r\n                    <Route\r\n                      path=\"/app/auth/profile\"\r\n                      exact\r\n                      component={Profiler}\r\n                    />\r\n                    <Route path=\"/app\" exact component={Dashboard} />\r\n                  </Switch>\r\n                </StaticRouter>\r\n              </React.Fragment>\r\n            )}\r\n            {!isServer && (\r\n              <React.Fragment>\r\n                <h3>I am a BrowserRouter </h3>\r\n                <BrowserRouter>\r\n                  <Switch>\r\n                    <Route\r\n                      path=\"/app/auth/profile\"\r\n                      exact\r\n                      component={Profiler}\r\n                    />\r\n                    <Route path=\"/app\" exact component={Dashboard} />\r\n                  </Switch>\r\n                </BrowserRouter>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FarmerAccounts;\r\n"]},"metadata":{},"sourceType":"module"}
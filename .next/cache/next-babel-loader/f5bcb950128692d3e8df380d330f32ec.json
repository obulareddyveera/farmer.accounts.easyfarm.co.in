{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { usersTypes } from \"../types/_users\";\nimport { api, apiService } from \"../api_service\";\nexport const getLocalStorageItem = key => {\n  if (process && false) {\n    const entity = localStorage.getItem(\"activeSessionUser\");\n    return entity && JSON.parse(entity);\n  }\n};\nexport const setLocalStorageItem = (key, value) => {\n  if (process && false) {\n    return localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const getActiveSessionUser = params => async dispatch => {\n  try {\n    let response = getLocalStorageItem(\"activeSessionUser\");\n\n    if (!response) {\n      response = await apiService.postData(api.activeSessionUser);\n      setLocalStorageItem(\"activeSessionUser\", response);\n    }\n\n    dispatch({\n      type: usersTypes.POST_USERS_SESSION_ACTIVE_SUCCESS,\n      payload: _objectSpread({}, response)\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
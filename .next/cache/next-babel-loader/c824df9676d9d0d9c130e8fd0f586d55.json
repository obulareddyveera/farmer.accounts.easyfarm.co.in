{"ast":null,"code":"export const api = {\n  activeSessionUser: {\n    url: \"auth/users/session/active\",\n    method: \"post\"\n  },\n  googleLoginLink: {\n    url: \"api.farmer.accounts.easyfarm.co.in/\",\n    method: \"get\"\n  },\n  baseUrl: \"api.farmer.accounts.easyfarm.co.in/\",\n  getProtocol: () => {\n    return `${window.location.protocol}//`;\n  }\n};\nexport const apiService = {\n  getGoogleLoginLink: async () => {\n    const response = await fetch(`${api.getProtocol()}${api.googleLoginLink}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.json();\n  },\n  postData: async (apiEntity, data) => {\n    try {\n      const url = `${api.getProtocol()}${api.baseUrl}${apiEntity.url}`;\n      console.log(\"--==>> PostData URL \", url);\n      const request = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"jwt\")\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\"\n      };\n\n      if (data) {\n        request.body = JSON.stringify(data);\n      }\n\n      const response = await fetch(url, request);\n      return response.json();\n    } catch (error) {\n      return error;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/api_service.js"],"names":["api","activeSessionUser","url","method","googleLoginLink","baseUrl","getProtocol","window","location","protocol","apiService","getGoogleLoginLink","response","fetch","headers","json","postData","apiEntity","data","console","log","request","localStorage","getItem","redirect","referrerPolicy","body","JSON","stringify","error"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,GAAG,EAAE,2BADY;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GADF;AAKjBC,EAAAA,eAAe,EAAE;AACfF,IAAAA,GAAG,EAAE,qCADU;AAEfC,IAAAA,MAAM,EAAE;AAFO,GALA;AASjBE,EAAAA,OAAO,EAAE,qCATQ;AAUjBC,EAAAA,WAAW,EAAE,MAAM;AACjB,WAAQ,GAAEC,MAAM,CAACC,QAAP,CAAgBC,QAAS,IAAnC;AACD;AAZgB,CAAZ;AAeP,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,kBAAkB,EAAE,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAG,CAACM,WAAJ,EAAkB,GAAEN,GAAG,CAACI,eAAgB,EAA5C,EAA+C;AACzED,MAAAA,MAAM,EAAE,KADiE;AAEzEW,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFgE,KAA/C,CAA5B;AAOA,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,GAVuB;AAWxBC,EAAAA,QAAQ,EAAE,OAAOC,SAAP,EAAkBC,IAAlB,KAA2B;AACnC,QAAI;AACF,YAAMhB,GAAG,GAAI,GAAEF,GAAG,CAACM,WAAJ,EAAkB,GAAEN,GAAG,CAACK,OAAQ,GAAEY,SAAS,CAACf,GAAI,EAA/D;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClB,GAApC;AAEA,YAAMmB,OAAO,GAAG;AACdlB,QAAAA,MAAM,EAAE,MADM;AAEdW,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,4BAAkBQ,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFX,SAFK;AAMdC,QAAAA,QAAQ,EAAE,QANI;AAOdC,QAAAA,cAAc,EAAE;AAPF,OAAhB;;AASA,UAAIP,IAAJ,EAAU;AACRG,QAAAA,OAAO,CAACK,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAf;AACD;;AACD,YAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAMmB,OAAN,CAA5B;AAEA,aAAOT,QAAQ,CAACG,IAAT,EAAP;AACD,KAnBD,CAmBE,OAAOc,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF;AAlCuB,CAAnB","sourcesContent":["export const api = {\r\n  activeSessionUser: {\r\n    url: \"auth/users/session/active\",\r\n    method: \"post\",\r\n  },\r\n  googleLoginLink: {\r\n    url: \"api.farmer.accounts.easyfarm.co.in/\",\r\n    method: \"get\",\r\n  },\r\n  baseUrl: \"api.farmer.accounts.easyfarm.co.in/\",\r\n  getProtocol: () => {\r\n    return `${window.location.protocol}//`;\r\n  },\r\n};\r\n\r\nexport const apiService = {\r\n  getGoogleLoginLink: async () => {\r\n    const response = await fetch(`${api.getProtocol()}${api.googleLoginLink}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return response.json();\r\n  },\r\n  postData: async (apiEntity, data) => {\r\n    try {\r\n      const url = `${api.getProtocol()}${api.baseUrl}${apiEntity.url}`;\r\n      console.log(\"--==>> PostData URL \", url);\r\n\r\n      const request = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"jwt\"),\r\n        },\r\n        redirect: \"follow\",\r\n        referrerPolicy: \"no-referrer\",\r\n      };\r\n      if (data) {\r\n        request.body = JSON.stringify(data);\r\n      }\r\n      const response = await fetch(url, request);\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
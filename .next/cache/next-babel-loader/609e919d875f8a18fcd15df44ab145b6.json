{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var api = {\n  activeSessionUser: {\n    url: \"auth/users/session/active\",\n    method: \"post\"\n  },\n  googleLoginLink: {\n    url: \"api.farmer.accounts.easyfarm.co.in/\",\n    method: \"get\"\n  },\n  baseUrl: \"api.farmer.accounts.easyfarm.co.in/\",\n  getProtocol: function getProtocol() {\n    return \"\".concat(window.location.protocol, \"//\");\n  }\n};\nexport var apiService = {\n  getGoogleLoginLink: function () {\n    var _getGoogleLoginLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(api.getProtocol()).concat(api.googleLoginLink), {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.json());\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getGoogleLoginLink() {\n      return _getGoogleLoginLink.apply(this, arguments);\n    }\n\n    return getGoogleLoginLink;\n  }(),\n  postData: function () {\n    var _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(apiEntity, data) {\n      var url, request, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              url = \"\".concat(api.getProtocol()).concat(api.baseUrl).concat(apiEntity.url);\n              console.log(\"--==>> PostData URL \", url);\n              request = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"x-access-token\": localStorage.getItem(\"jwt\")\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\"\n              };\n\n              if (data) {\n                request.body = JSON.stringify(data);\n              }\n\n              _context2.next = 7;\n              return fetch(url, request);\n\n            case 7:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.json());\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    function postData(_x, _x2) {\n      return _postData.apply(this, arguments);\n    }\n\n    return postData;\n  }()\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/api_service.js"],"names":["api","activeSessionUser","url","method","googleLoginLink","baseUrl","getProtocol","window","location","protocol","apiService","getGoogleLoginLink","fetch","headers","response","json","postData","apiEntity","data","console","log","request","localStorage","getItem","redirect","referrerPolicy","body","JSON","stringify"],"mappings":";;AAAA,OAAO,IAAMA,GAAG,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,GAAG,EAAE,2BADY;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GADF;AAKjBC,EAAAA,eAAe,EAAE;AACfF,IAAAA,GAAG,EAAE,qCADU;AAEfC,IAAAA,MAAM,EAAE;AAFO,GALA;AASjBE,EAAAA,OAAO,EAAE,qCATQ;AAUjBC,EAAAA,WAAW,EAAE,uBAAM;AACjB,qBAAUC,MAAM,CAACC,QAAP,CAAgBC,QAA1B;AACD;AAZgB,CAAZ;AAeP,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,kBAAkB;AAAA,uFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKC,KAAK,WAAIZ,GAAG,CAACM,WAAJ,EAAJ,SAAwBN,GAAG,CAACI,eAA5B,GAA+C;AACzED,gBAAAA,MAAM,EAAE,KADiE;AAEzEU,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAFgE,eAA/C,CADV;;AAAA;AACZC,cAAAA,QADY;AAAA,+CAQXA,QAAQ,CAACC,IAAT,EARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADM;AAWxBC,EAAAA,QAAQ;AAAA,6EAAE,kBAAOC,SAAP,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAhB,cAAAA,GAFA,aAESF,GAAG,CAACM,WAAJ,EAFT,SAE6BN,GAAG,CAACK,OAFjC,SAE2CY,SAAS,CAACf,GAFrD;AAGNiB,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClB,GAApC;AAEMmB,cAAAA,OALA,GAKU;AACdlB,gBAAAA,MAAM,EAAE,MADM;AAEdU,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,oCAAkBS,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFX,iBAFK;AAMdC,gBAAAA,QAAQ,EAAE,QANI;AAOdC,gBAAAA,cAAc,EAAE;AAPF,eALV;;AAcN,kBAAIP,IAAJ,EAAU;AACRG,gBAAAA,OAAO,CAACK,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAf;AACD;;AAhBK;AAAA,qBAiBiBN,KAAK,CAACV,GAAD,EAAMmB,OAAN,CAjBtB;;AAAA;AAiBAP,cAAAA,QAjBA;AAAA,gDAmBCA,QAAQ,CAACC,IAAT,EAnBD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXgB,CAAnB","sourcesContent":["export const api = {\r\n  activeSessionUser: {\r\n    url: \"auth/users/session/active\",\r\n    method: \"post\",\r\n  },\r\n  googleLoginLink: {\r\n    url: \"api.farmer.accounts.easyfarm.co.in/\",\r\n    method: \"get\",\r\n  },\r\n  baseUrl: \"api.farmer.accounts.easyfarm.co.in/\",\r\n  getProtocol: () => {\r\n    return `${window.location.protocol}//`;\r\n  },\r\n};\r\n\r\nexport const apiService = {\r\n  getGoogleLoginLink: async () => {\r\n    const response = await fetch(`${api.getProtocol()}${api.googleLoginLink}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return response.json();\r\n  },\r\n  postData: async (apiEntity, data) => {\r\n    try {\r\n      const url = `${api.getProtocol()}${api.baseUrl}${apiEntity.url}`;\r\n      console.log(\"--==>> PostData URL \", url);\r\n\r\n      const request = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"jwt\"),\r\n        },\r\n        redirect: \"follow\",\r\n        referrerPolicy: \"no-referrer\",\r\n      };\r\n      if (data) {\r\n        request.body = JSON.stringify(data);\r\n      }\r\n      const response = await fetch(url, request);\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
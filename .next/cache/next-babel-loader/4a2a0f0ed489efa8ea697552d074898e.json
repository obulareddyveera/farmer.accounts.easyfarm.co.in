{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var api = {\n  activeSessionUser: {\n    url: \"auth/users/session/active\",\n    method: \"post\"\n  },\n  googleLoginLink: {\n    url: \"api.farmer.accounts.easyfarm.co.in/\",\n    method: \"get\"\n  },\n  baseUrl: \"api.farmer.accounts.easyfarm.co.in/\",\n  getProtocol: function getProtocol() {\n    return \"\".concat(window.location.protocol, \"//\");\n  }\n};\nexport var apiService = {\n  getGoogleLoginLink: function () {\n    var _getGoogleLoginLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(api.getProtocol()).concat(api.googleLoginLink.url);\n              _context.next = 3;\n              return fetch(url, {\n                method: api.googleLoginLink.method,\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.json());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getGoogleLoginLink() {\n      return _getGoogleLoginLink.apply(this, arguments);\n    }\n\n    return getGoogleLoginLink;\n  }(),\n  postData: function () {\n    var _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(apiEntity, data) {\n      var url, request, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              url = \"\".concat(api.getProtocol()).concat(api.baseUrl).concat(apiEntity.url);\n              request = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"x-access-token\": localStorage.getItem(\"jwt\")\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\"\n              };\n\n              if (data) {\n                request.body = JSON.stringify(data);\n              }\n\n              _context2.next = 6;\n              return fetch(url, request);\n\n            case 6:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.json());\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function postData(_x, _x2) {\n      return _postData.apply(this, arguments);\n    }\n\n    return postData;\n  }()\n};","map":null,"metadata":{},"sourceType":"module"}
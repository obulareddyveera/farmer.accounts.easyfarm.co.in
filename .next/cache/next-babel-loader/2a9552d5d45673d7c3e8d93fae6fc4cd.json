{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { breakPointTypes } from \"../types/_breakPoints\";\nexport default (function (state, action) {\n  var initState = {\n    isLoading: true,\n    dateLastModified: new Date().getTime()\n  };\n  if (!state) return initState;\n\n  switch (action.type) {\n    case breakPointTypes.ON_BROWSER_RESIZE_DONE:\n      return _objectSpread({\n        isLoading: false,\n        dateLastModified: new Date().getTime()\n      }, action.payload);\n\n    default:\n      return _objectSpread({}, initState);\n  }\n});","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/reducers/_breakPoints.js"],"names":["breakPointTypes","state","action","initState","isLoading","dateLastModified","Date","getTime","type","ON_BROWSER_RESIZE_DONE","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,uBAAhC;AAEA,gBAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChC,MAAMC,SAAS,GAAG;AAChBC,IAAAA,SAAS,EAAE,IADK;AAEhBC,IAAAA,gBAAgB,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFF,GAAlB;AAIA,MAAI,CAACN,KAAL,EAAY,OAAOE,SAAP;;AAEZ,UAAQD,MAAM,CAACM,IAAf;AACE,SAAKR,eAAe,CAACS,sBAArB;AACE;AACEL,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,gBAAgB,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFpB,SAGKL,MAAM,CAACQ,OAHZ;;AAKF;AACE,+BAAYP,SAAZ;AARJ;AAUD,CAjBD","sourcesContent":["import { breakPointTypes } from \"../types/_breakPoints\";\r\n\r\nexport default (state, action) => {\r\n  const initState = {\r\n    isLoading: true,\r\n    dateLastModified: new Date().getTime(),\r\n  };\r\n  if (!state) return initState;\r\n\r\n  switch (action.type) {\r\n    case breakPointTypes.ON_BROWSER_RESIZE_DONE:\r\n      return {\r\n        isLoading: false,\r\n        dateLastModified: new Date().getTime(),\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return { ...initState };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
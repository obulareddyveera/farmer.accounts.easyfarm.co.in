{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { usersTypes } from \"../types/_users\";\nimport { api, apiService } from \"../api_service\";\nexport var getActiveSessionUser = function getActiveSessionUser(params) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var session, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              session = localStorage.getItem('activeSessionUser');\n\n              if (!session) {\n                _context.next = 6;\n                break;\n              }\n\n              dispatch({\n                type: usersTypes.POST_USERS_SESSION_ACTIVE_SUCCESS,\n                payload: _objectSpread({}, session)\n              });\n              _context.next = 11;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return apiService.postData(api.activeSessionUser);\n\n            case 8:\n              response = _context.sent;\n              localStorage.setItem('activeSessionUser', JSON.stringify(response));\n              dispatch({\n                type: usersTypes.POST_USERS_SESSION_ACTIVE_SUCCESS,\n                payload: _objectSpread({}, response)\n              });\n\n            case 11:\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/actions/_users.js"],"names":["usersTypes","api","apiService","getActiveSessionUser","params","dispatch","session","localStorage","getItem","type","POST_USERS_SESSION_ACTIVE_SUCCESS","payload","postData","activeSessionUser","response","setItem","JSON","stringify","console","log"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,gBAAhC;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtCC,cAAAA,OAFsC,GAE5BC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAF4B;;AAAA,mBAGxCF,OAHwC;AAAA;AAAA;AAAA;;AAI1CD,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAET,UAAU,CAACU,iCADV;AAEPC,gBAAAA,OAAO,oBAAOL,OAAP;AAFA,eAAD,CAAR;AAJ0C;AAAA;;AAAA;AAAA;AAAA,qBASnBJ,UAAU,CAACU,QAAX,CAAoBX,GAAG,CAACY,iBAAxB,CATmB;;AAAA;AASpCC,cAAAA,QAToC;AAU1CP,cAAAA,YAAY,CAACQ,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAA1C;AAEAT,cAAAA,QAAQ,CAAC;AACPI,gBAAAA,IAAI,EAAET,UAAU,CAACU,iCADV;AAEPC,gBAAAA,OAAO,oBAAOG,QAAP;AAFA,eAAD,CAAR;;AAZ0C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmB5CI,cAAAA,OAAO,CAACC,GAAR;;AAnB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B","sourcesContent":["import { usersTypes } from \"../types/_users\";\r\nimport { api, apiService } from \"../api_service\";\r\n\r\nexport const getActiveSessionUser = (params) => async (dispatch) => {\r\n  try {\r\n    const session = localStorage.getItem('activeSessionUser');\r\n    if (session) {\r\n      dispatch({\r\n        type: usersTypes.POST_USERS_SESSION_ACTIVE_SUCCESS,\r\n        payload: { ...session },\r\n      });\r\n    } else {\r\n      const response = await apiService.postData(api.activeSessionUser);\r\n      localStorage.setItem('activeSessionUser', JSON.stringify(response));\r\n  \r\n      dispatch({\r\n        type: usersTypes.POST_USERS_SESSION_ACTIVE_SUCCESS,\r\n        payload: { ...response },\r\n      });\r\n    }\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
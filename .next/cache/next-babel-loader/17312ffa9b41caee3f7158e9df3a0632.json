{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var api = {\n  activeSessionUser: {\n    url: \"auth/users/session/active\",\n    method: \"post\"\n  },\n  getBaseUrl: function getBaseUrl() {\n    return \"\".concat(window.location.protocol, \"//api.farmer.accounts.easyfarm.co.in/\");\n  }\n};\nexport var apiService = {\n  postData: function () {\n    var _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(apiEntity, data) {\n      var url, request, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              url = \"\".concat(api.getBaseUrl()).concat(apiEntity.url);\n              console.log(\"--==>> PostData URL \", url);\n              request = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"x-access-token\": localStorage.getItem('jwt')\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\"\n              };\n\n              if (data) {\n                request.body = JSON.stringify(data);\n              }\n\n              _context.next = 7;\n              return fetch(url, request);\n\n            case 7:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.json());\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    function postData(_x, _x2) {\n      return _postData.apply(this, arguments);\n    }\n\n    return postData;\n  }()\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/api_service.js"],"names":["api","activeSessionUser","url","method","getBaseUrl","window","location","protocol","apiService","postData","apiEntity","data","console","log","request","headers","localStorage","getItem","redirect","referrerPolicy","body","JSON","stringify","fetch","response","json"],"mappings":";;AAAA,OAAO,IAAMA,GAAG,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,GAAG,EAAE,2BADY;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GADF;AAKjBC,EAAAA,UAAU,EAAE,sBAAM;AAChB,qBAAUC,MAAM,CAACC,QAAP,CAAgBC,QAA1B;AACD;AAPgB,CAAZ;AAUP,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,QAAQ;AAAA,6EAAE,iBAAOC,SAAP,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAT,cAAAA,GAFA,aAESF,GAAG,CAACI,UAAJ,EAFT,SAE4BM,SAAS,CAACR,GAFtC;AAGNU,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCX,GAApC;AAEMY,cAAAA,OALA,GAKU;AACdX,gBAAAA,MAAM,EAAE,MADM;AAEdY,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,oCAAkBC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFX,iBAFK;AAMdC,gBAAAA,QAAQ,EAAE,QANI;AAOdC,gBAAAA,cAAc,EAAE;AAPF,eALV;;AAcN,kBAAIR,IAAJ,EAAU;AACRG,gBAAAA,OAAO,CAACM,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAf;AACD;;AAhBK;AAAA,qBAiBiBY,KAAK,CAACrB,GAAD,EAAMY,OAAN,CAjBtB;;AAAA;AAiBAU,cAAAA,QAjBA;AAAA,+CAmBCA,QAAQ,CAACC,IAAT,EAnBD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADgB,CAAnB","sourcesContent":["export const api = {\r\n  activeSessionUser: {\r\n    url: \"auth/users/session/active\",\r\n    method: \"post\",\r\n  },\r\n  getBaseUrl: () => {\r\n    return `${window.location.protocol}//api.farmer.accounts.easyfarm.co.in/`;\r\n  },\r\n};\r\n\r\nexport const apiService = {\r\n  postData: async (apiEntity, data) => {\r\n    try {\r\n      const url = `${api.getBaseUrl()}${apiEntity.url}`;\r\n      console.log(\"--==>> PostData URL \", url);\r\n\r\n      const request = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem('jwt'),\r\n        },\r\n        redirect: \"follow\",\r\n        referrerPolicy: \"no-referrer\",\r\n      };\r\n      if (data) {\r\n        request.body = JSON.stringify(data);\r\n      }\r\n      const response = await fetch(url, request);\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
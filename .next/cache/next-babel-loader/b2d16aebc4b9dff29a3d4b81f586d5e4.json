{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { metaDataTypes } from \"../types/_metadata\";\nimport SideMenuMetaInfo from \"../metadata/sideMenuMetaInfo\";\nexport var getSideMenuMetaData = function getSideMenuMetaData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                console.log('--==>> Action GET_SIDEMENU_DETAILS_SUCCESS  <<==--');\n                dispatch({\n                  type: metaDataTypes.GET_SIDEMENU_DETAILS_SUCCESS,\n                  payload: SideMenuMetaInfo\n                });\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var onLiItemSelect = function onLiItemSelect(item) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                console.log('--==>> Action GET_SIDEMENU_DETAILS_SUCCESS  <<==--');\n                SideMenuMetaInfo.forEach(function (entity) {\n                  if (entity.id === item.id) {\n                    entity.className = \"active\";\n                  } else {\n                    entity.className = null;\n                  }\n                });\n                dispatch({\n                  type: metaDataTypes.GET_SIDEMENU_DETAILS_SUCCESS,\n                  payload: SideMenuMetaInfo\n                });\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/actions/_metadata.js"],"names":["metaDataTypes","SideMenuMetaInfo","getSideMenuMetaData","dispatch","console","log","type","GET_SIDEMENU_DETAILS_SUCCESS","payload","err","onLiItemSelect","item","forEach","entity","id","className"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACvC,kBAAI;AACFC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACAF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEN,aAAa,CAACO,4BADb;AAEPC,kBAAAA,OAAO,EAAEP;AAFF,iBAAD,CAAR;AAID,eAND,CAME,OAAOQ,GAAP,EAAY;AACZL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;;AATsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAYP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA;AAAA,yEAAU,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AACtC,kBAAI;AACFC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACAJ,gBAAAA,gBAAgB,CAACW,OAAjB,CAAyB,UAACC,MAAD,EAAY;AACnC,sBAAIA,MAAM,CAACC,EAAP,KAAcH,IAAI,CAACG,EAAvB,EAA2B;AACzBD,oBAAAA,MAAM,CAACE,SAAP,GAAmB,QAAnB;AACD,mBAFD,MAEO;AACLF,oBAAAA,MAAM,CAACE,SAAP,GAAmB,IAAnB;AACD;AACF,iBAND;AAQAZ,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEN,aAAa,CAACO,4BADb;AAEPC,kBAAAA,OAAO,EAAEP;AAFF,iBAAD,CAAR;AAID,eAdD,CAcE,OAAOQ,GAAP,EAAY;AACZL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;;AAjBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { metaDataTypes } from \"../types/_metadata\";\r\nimport SideMenuMetaInfo from \"../metadata/sideMenuMetaInfo\";\r\n\r\nexport const getSideMenuMetaData = () => async (dispatch) => {\r\n  try {\r\n    console.log('--==>> Action GET_SIDEMENU_DETAILS_SUCCESS  <<==--');\r\n    dispatch({\r\n      type: metaDataTypes.GET_SIDEMENU_DETAILS_SUCCESS,\r\n      payload: SideMenuMetaInfo,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const onLiItemSelect = (item) => async (dispatch) => {\r\n  try {\r\n    console.log('--==>> Action GET_SIDEMENU_DETAILS_SUCCESS  <<==--');\r\n    SideMenuMetaInfo.forEach((entity) => {\r\n      if (entity.id === item.id) {\r\n        entity.className = \"active\";\r\n      } else {\r\n        entity.className = null;\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: metaDataTypes.GET_SIDEMENU_DETAILS_SUCCESS,\r\n      payload: SideMenuMetaInfo,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
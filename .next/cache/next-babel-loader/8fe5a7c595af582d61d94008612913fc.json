{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { breakPointTypes } from \"../types/_breakPoints\";\nexport var setBreakPoints = function setBreakPoints(params) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _view;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                _view = _objectSpread({\n                  type: \"large\"\n                }, params);\n\n                if (innerWidth > 1007) {\n                  _view.type = \"large\";\n                } else if (innerWidth > 640 && innerWidth < 1008) {\n                  _view.type = \"medium\";\n                } else if (innerWidth < 641) {\n                  _view.type = \"small\";\n                }\n\n                dispatch({\n                  type: breakPointTypes.ON_BROWSER_RESIZE_DONE,\n                  payload: {\n                    view: _view\n                  }\n                });\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/obulareddy.reddy/workspace/projects/easyfarm/farmer.accounts.easyfarm.co.in/store/actions/_breakPoints.js"],"names":["breakPointTypes","setBreakPoints","params","dispatch","_view","type","innerWidth","ON_BROWSER_RESIZE_DONE","payload","view","err","console","log"],"mappings":";;;;;;;;AAAA,SAASA,eAAT,QAAgC,uBAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxC,kBAAI;AACIC,gBAAAA,KADJ;AAEAC,kBAAAA,IAAI,EAAE;AAFN,mBAGGH,MAHH;;AAKF,oBAAII,UAAU,GAAG,IAAjB,EAAuB;AACrBF,kBAAAA,KAAK,CAACC,IAAN,GAAa,OAAb;AACD,iBAFD,MAEO,IAAIC,UAAU,GAAG,GAAb,IAAoBA,UAAU,GAAG,IAArC,EAA2C;AAChDF,kBAAAA,KAAK,CAACC,IAAN,GAAa,QAAb;AACD,iBAFM,MAEA,IAAIC,UAAU,GAAG,GAAjB,EAAsB;AAC3BF,kBAAAA,KAAK,CAACC,IAAN,GAAa,OAAb;AACD;;AAEDF,gBAAAA,QAAQ,CAAC;AACPE,kBAAAA,IAAI,EAAEL,eAAe,CAACO,sBADf;AAEPC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,IAAI,EAAEL;AADC;AAFF,iBAAD,CAAR;AAMD,eAnBD,CAmBE,OAAOM,GAAP,EAAY;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AAtBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { breakPointTypes } from \"../types/_breakPoints\";\r\n\r\nexport const setBreakPoints = (params) => async (dispatch) => {\r\n  try {\r\n    const _view = {\r\n      type: \"large\",\r\n      ...params,\r\n    };\r\n    if (innerWidth > 1007) {\r\n      _view.type = \"large\";\r\n    } else if (innerWidth > 640 && innerWidth < 1008) {\r\n      _view.type = \"medium\";\r\n    } else if (innerWidth < 641) {\r\n      _view.type = \"small\";\r\n    }\r\n\r\n    dispatch({\r\n      type: breakPointTypes.ON_BROWSER_RESIZE_DONE,\r\n      payload: {\r\n        view: _view,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}